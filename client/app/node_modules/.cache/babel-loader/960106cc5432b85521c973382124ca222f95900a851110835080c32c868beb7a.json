{"ast":null,"code":"var _jsxFileName = \"E:\\\\Latest\\\\2_1-Term-Project\\\\client\\\\app\\\\src\\\\routes\\\\UserDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetailsPage = ({\n  match\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        // Extract the user ID from the URL params\n        const userId = match.params.id;\n\n        // Make a request to your backend to fetch user details based on the ID\n        const response = await fetch(`http://localhost:3000/api/user/${userId}`);\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUserDetails();\n  }, [match.params.id]); // Re-run effect when ID changes\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", user.firstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", user.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"City: \", user.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"District: \", user.district]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDetailsPage, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserDetailsPage;\nexport default UserDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"UserDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDetailsPage","match","_s","user","setUser","fetchUserDetails","userId","params","id","response","fetch","userData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","email","city","district","_c","$RefreshReg$"],"sources":["E:/Latest/2_1-Term-Project/client/app/src/routes/UserDetailsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst UserDetailsPage = ({ match }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserDetails = async () => {\r\n      try {\r\n        // Extract the user ID from the URL params\r\n        const userId = match.params.id;\r\n        \r\n        // Make a request to your backend to fetch user details based on the ID\r\n        const response = await fetch(`http://localhost:3000/api/user/${userId}`);\r\n        const userData = await response.json();\r\n        \r\n        setUser(userData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchUserDetails();\r\n  }, [match.params.id]); // Re-run effect when ID changes\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Details</h1>\r\n      <p>First Name: {user.firstName}</p>\r\n      <p>Last Name: {user.lastName}</p>\r\n      <p>Email: {user.email}</p>\r\n      <p>City: {user.city}</p>\r\n      <p>District: {user.district}</p>\r\n      {/* Add more attributes as needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA,MAAMC,MAAM,GAAGL,KAAK,CAACM,MAAM,CAACC,EAAE;;QAE9B;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,MAAO,EAAC,CAAC;QACxE,MAAMK,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAEtCR,OAAO,CAACO,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,KAAK,CAACM,MAAM,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEvB,IAAI,CAACL,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GAAG,cAAY,EAACZ,IAAI,CAACiB,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA;MAAAgB,QAAA,GAAG,aAAW,EAACZ,IAAI,CAACkB,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACZ,IAAI,CAACmB,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAAgB,QAAA,GAAG,QAAM,EAACZ,IAAI,CAACoB,IAAI;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,GAAG,YAAU,EAACZ,IAAI,CAACqB,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCIF,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}